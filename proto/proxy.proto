// Copyright The Kubernetes Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// LEGACY

syntax = "proto3";

service ProxyService {
    // Dial a remote address and return a stream id if success
    rpc Dial(DialRequest) returns (DialResponse) {}

    // Connect connects to a remote address by stream id, and establish
    // a bi-directional stream.
    rpc Connect(stream Data) returns (stream Data) {}

    // rpc Close()
}

message DialRequest {
    // tcp or udp?
    string protocol = 1;

    // node:port
    string address = 2;
}

message DialResponse {
    string error = 1;
    int32 streamID = 2;
}

message Data {
    // streamID to connect to
    int32 streamID = 1;

    // error message if error happens
    string error = 2;

    // stream data
    bytes data = 3;
}

